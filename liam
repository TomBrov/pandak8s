# Network load balancer for internal access
resource "aws_lb" "nlb_jupiter" {
  name               = "${var.application_name}-nlb-${var.environment}"
  internal           = true # Internal for closed environment
  load_balancer_type = "network"
  subnets            = values(data.aws_subnet.private)[*].id # Private subnets
  security_groups    = [aws_security_group.nlb_sg.id]

  enable_cross_zone_load_balancing = true

  tags = {
    Environment = var.environment
  }
}

resource "aws_security_group" "nlb_sg" {
  name        = "${var.application_name}-nlb-sg-${var.environment}"
  description = "SG for ALB"
  vpc_id      = data.aws_vpc.main.id

  ingress {
    from_port   = 443
    to_port     = 443
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"] # Adjust if needed
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

resource "aws_security_group" "alb_sg" {
  name        = "${var.application_name}-alb-sg-${var.environment}"
  description = "SG for ALB"
  vpc_id      = data.aws_vpc.main.id

  ingress {
    from_port   = 0
    to_port     = 65535
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"] # Adjust if needed
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}


# ALB that takes traffice from NLB
resource "aws_lb" "alb_jupiter" {
  name                             = "${var.application_name}-alb-jupiter-${var.environment}"
  internal                         = true # Internal for closed environment
  load_balancer_type               = "application"
  subnets                          = values(data.aws_subnet.private)[*].id # Private subnets
  security_groups                  = [aws_security_group.alb_sg.id]
  enable_cross_zone_load_balancing = true

  tags = {
    Environment = var.environment
  }
}

resource "aws_lb_listener" "nlb_to_alb" {
  load_balancer_arn = aws_lb.nlb_jupiter.arn
  port              = "443"
  protocol          = "TCP"

  default_action {
    type             = "forward"
    target_group_arn = aws_lb_target_group.alb_tg.arn
  }

  tags = {
    Name        = "${var.application_name}-nlb-alb-listener-${var.environment}"
    Environment = var.environment
  }
}

resource "aws_lb_target_group" "alb_tg" {
  name        = "${var.application_name}-alb-tg-${var.environment}"
  target_type = "alb"
  port        = 443
  protocol    = "TCP"
  vpc_id      = data.aws_vpc.main.id

  health_check {
    path                = "/"
    matcher             = "200-399"
    interval            = 30
    timeout             = 5
    unhealthy_threshold = 2
    healthy_threshold   = 3
  }
}

resource "aws_lb_target_group_attachment" "alb_tg_attachemnt" {
  target_group_arn = aws_lb_target_group.alb_tg.arn
  target_id        = aws_lb.alb_jupiter.arn
  port             = 443
}
