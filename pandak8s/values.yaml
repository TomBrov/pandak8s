ingress-nginx:
  controller:
    enabled: true
    service:
      type: LoadBalancer
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
        service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    ingressClass: nginx
    ingressClassResource:
      name: nginx

ingress:
  name: application-ingress
  className: nginx
  host: test.vicarius.xyz
  annotations:
    external-dns.alpha.kubernetes.io/hostname: test.vicarius.xyz


frontend:
  name: frontend
  appLabel: frontend
  replicaCount: 2
  containerPort: 80
  image:
    repository: brovy/pandak8s-frontend
    tag: latest
    pullPolicy: Always
  env:
    backendHost: backend
  service:
    port: 80
    type: ClusterIP

backend:
  name: backend
  appLabel: backend
  replicaCount: 3
  containerPort: 8080
  image:
    repository: brovy/pandak8s-backend
    tag: latest
    pullPolicy: Always
  service:
    port: 80
    type: ClusterIP
  serviceAccountName: backend-sa
  rbac:
    enabled: true
    fullAccessRole:
      name: backend-full-access
      rules:
        - apiGroups: [""]
          resources: ["pods", "services"]
          verbs: ["get", "list", "create", "update", "delete"]
        - apiGroups: ["apps"]
          resources: ["deployments"]
          verbs: ["get", "list", "create", "update", "delete"]
    fullAccessBinding:
      name: backend-clusterrole-binding
    readonlyRole:
      name: backend-readonly
      namespace: kube-system
      rules:
        - apiGroups: [""]
          resources: ["pods", "services"]
          verbs: ["get", "list"]
        - apiGroups: ["apps"]
          resources: ["deployments"]
          verbs: ["get", "list"]
    readonlyBinding:
      name: backend-readonly-binding